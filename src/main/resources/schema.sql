DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS mpa_rating CASCADE;
DROP TABLE IF EXISTS directors CASCADE;
DROP TABLE IF EXISTS film_directors CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS review_likes CASCADE;

CREATE TABLE IF NOT EXISTS users(
user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR NOT NULL,
login VARCHAR(100) NOT NULL,
name VARCHAR(100),
birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS friendship(
friendship_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
user_id INT,
friend_id INT,
FOREIGN KEY(user_id) REFERENCES users(user_id),
FOREIGN KEY(friend_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS mpa_rating(
rating_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
rating_name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS films(
film_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(100) NOT NULL,
description VARCHAR(200) NOT NULL,
release_date DATE NOT NULL,
duration INT NOT NULL,
rating_id INT REFERENCES mpa_rating(rating_id)
);

CREATE TABLE IF NOT EXISTS likes(
like_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id INT,
user_id INT,
FOREIGN KEY(film_id) REFERENCES films(film_id),
FOREIGN KEY(user_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS genres(
genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
genre_name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS film_genres(
id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id INT,
genre_id INT,
FOREIGN KEY(film_id) REFERENCES films(film_id),
FOREIGN KEY(genre_id) REFERENCES genres(genre_id)
);

CREATE TABLE IF NOT EXISTS directors(
director_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
director_name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS film_directors(
id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
film_id INT,
director_id INT,
FOREIGN KEY(film_id) REFERENCES films(film_id),
FOREIGN KEY(director_id) REFERENCES directors(director_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content TEXT NOT NULL,
    is_positive BOOLEAN NOT NULL,
    user_id INT NOT NULL,
    film_id INT NOT NULL,
    useful INT DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films(film_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_likes (
    like_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    review_id INT NOT NULL,
    user_id INT NOT NULL,
    is_like BOOLEAN NOT NULL,
    FOREIGN KEY (review_id) REFERENCES reviews(review_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    UNIQUE (review_id, user_id)
);
